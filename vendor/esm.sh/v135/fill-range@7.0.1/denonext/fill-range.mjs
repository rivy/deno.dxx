/* esm.sh - esbuild bundle(fill-range@7.0.1) denonext production */
import * as __0$ from "node:util";
import * as __1$ from "/v135/to-regex-range@5.0.1/denonext/to-regex-range.mjs";
var require=n=>{const e=m=>typeof m.default<"u"?m.default:m,c=m=>Object.assign({},m);switch(n){case"util":return e(__0$);case"to-regex-range":return e(__1$);default:throw new Error("module \""+n+"\" not found");}};
var D=Object.create;var R=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var G=Object.getOwnPropertyNames;var H=Object.getPrototypeOf,J=Object.prototype.hasOwnProperty;var C=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,t)=>(typeof require<"u"?require:r)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});var K=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),L=(e,r)=>{for(var t in r)R(e,t,{get:r[t],enumerable:!0})},d=(e,r,t,i)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of G(r))!J.call(e,n)&&n!==t&&R(e,n,{get:()=>r[n],enumerable:!(i=F(r,n))||i.enumerable});return e},s=(e,r,t)=>(d(e,r,"default"),t&&d(t,r,"default")),j=(e,r,t)=>(t=e!=null?D(H(e)):{},d(r||!e||!e.__esModule?R(t,"default",{value:e,enumerable:!0}):t,e));var y=K((ie,O)=>{"use strict";var P=C("util"),E=C("to-regex-range"),A=e=>e!==null&&typeof e=="object"&&!Array.isArray(e),Q=e=>r=>e===!0?Number(r):String(r),S=e=>typeof e=="number"||typeof e=="string"&&e!=="",c=e=>Number.isInteger(+e),$=e=>{let r=`${e}`,t=-1;if(r[0]==="-"&&(r=r.slice(1)),r==="0")return!1;for(;r[++t]==="0";);return t>0},U=(e,r,t)=>typeof e=="string"||typeof r=="string"?!0:t.stringify===!0,W=(e,r,t)=>{if(r>0){let i=e[0]==="-"?"-":"";i&&(e=e.slice(1)),e=i+e.padStart(i?r-1:r,"0")}return t===!1?String(e):e},_=(e,r)=>{let t=e[0]==="-"?"-":"";for(t&&(e=e.slice(1),r--);e.length<r;)e="0"+e;return t?"-"+e:e},X=(e,r)=>{e.negatives.sort((f,u)=>f<u?-1:f>u?1:0),e.positives.sort((f,u)=>f<u?-1:f>u?1:0);let t=r.capture?"":"?:",i="",n="",l;return e.positives.length&&(i=e.positives.join("|")),e.negatives.length&&(n=`-(${t}${e.negatives.join("|")})`),i&&n?l=`${i}|${n}`:l=i||n,r.wrap?`(${t}${l})`:l},I=(e,r,t,i)=>{if(t)return E(e,r,{wrap:!1,...i});let n=String.fromCharCode(e);if(e===r)return n;let l=String.fromCharCode(r);return`[${n}-${l}]`},q=(e,r,t)=>{if(Array.isArray(e)){let i=t.wrap===!0,n=t.capture?"":"?:";return i?`(${n}${e.join("|")})`:e.join("|")}return E(e,r,t)},V=(...e)=>new RangeError("Invalid range arguments: "+P.inspect(...e)),z=(e,r,t)=>{if(t.strictRanges===!0)throw V([e,r]);return[]},Y=(e,r)=>{if(r.strictRanges===!0)throw new TypeError(`Expected step "${e}" to be a number`);return[]},Z=(e,r,t=1,i={})=>{let n=Number(e),l=Number(r);if(!Number.isInteger(n)||!Number.isInteger(l)){if(i.strictRanges===!0)throw V([e,r]);return[]}n===0&&(n=0),l===0&&(l=0);let f=n>l,u=String(e),h=String(r),m=String(t);t=Math.max(Math.abs(t),1);let g=$(u)||$(h)||$(m),o=g?Math.max(u.length,h.length,m.length):0,x=g===!1&&U(e,r,i)===!1,k=i.transform||Q(x);if(i.toRegex&&t===1)return I(_(e,o),_(r,o),!0,i);let v={negatives:[],positives:[]},B=N=>v[N<0?"negatives":"positives"].push(Math.abs(N)),b=[],M=0;for(;f?n>=l:n<=l;)i.toRegex===!0&&t>1?B(n):b.push(W(k(n,M),o,x)),n=f?n-t:n+t,M++;return i.toRegex===!0?t>1?X(v,i):q(b,null,{wrap:!1,...i}):b},p=(e,r,t=1,i={})=>{if(!c(e)&&e.length>1||!c(r)&&r.length>1)return z(e,r,i);let n=i.transform||(x=>String.fromCharCode(x)),l=`${e}`.charCodeAt(0),f=`${r}`.charCodeAt(0),u=l>f,h=Math.min(l,f),m=Math.max(l,f);if(i.toRegex&&t===1)return I(h,m,!1,i);let g=[],o=0;for(;u?l>=f:l<=f;)g.push(n(l,o)),l=u?l-t:l+t,o++;return i.toRegex===!0?q(g,null,{wrap:!1,options:i}):g},w=(e,r,t,i={})=>{if(r==null&&S(e))return[e];if(!S(e)||!S(r))return z(e,r,i);if(typeof t=="function")return w(e,r,1,{transform:t});if(A(t))return w(e,r,0,t);let n={...i};return n.capture===!0&&(n.wrap=!0),t=t||n.step||1,c(t)?c(e)&&c(r)?Z(e,r,t,n):p(e,r,Math.max(Math.abs(t),1),n):t!=null&&!A(t)?Y(t,n):w(e,r,1,t)};O.exports=w});var a={};L(a,{default:()=>te});var ee=j(y());s(a,j(y()));var{default:T,...re}=ee,te=T!==void 0?T:re;export{te as default};
/*! Bundled license information:

fill-range/index.js:
  (*!
   * fill-range <https://github.com/jonschlinkert/fill-range>
   *
   * Copyright (c) 2014-present, Jon Schlinkert.
   * Licensed under the MIT License.
   *)
*/
//# sourceMappingURL=fill-range.mjs.map